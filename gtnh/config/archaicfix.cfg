# Configuration file

general {
    # When true, the Phosphor backport is enabled. Disabling is not recommended as it will generally add lag. [default: true]
    B:enablePhosphor=true

    # Disable spawn chunks [default: false]
    B:disableSpawnChunks=false

    # Force all mixins to be loaded and the cache to be cleared. This saves RAM, but may reveal bugs in mods' mixin configs. Based on MemoryLeakFix. [default: false]
    B:clearMixinCache=false

    # Show block registry name and meta value in F3, similar to 1.8+. [default: false]
    B:showBlockDebugInfo=false

    # Fix vanilla issues with entities spawned as part of structures not being marked persistent (e.g. MC-108664) [default: true]
    B:fixEntityStructurePersistence=true

    # Remove JourneyMap debug feature. [default: false]
    B:removeJourneymapDebug=false

    # Prevent entities outside a certain distance from being ticked. This does not affect tile entities, and is essentially another view distance slider. [default: false]
    B:optimizeEntityTicking=false

    # Replace the regional difficulty calculation with a TMCW-style one that increases with playtime, not time per chunk. [default: false]
    B:betterRegionalDifficulty=false

    # Allow entities to be hit through grass, instead of breaking the grass plant [default: true]
    B:enableHitThroughGrassFix=true

    # Disable Food Plus' update message. [default: true]
    B:disableFoodPlusUpdates=true

    # Fix the client leaking memory by holding on to skins and player instances that aren't needed. [default: true]
    B:fixSkinMemoryLeak=true

    # Print a stacktrace when cascading worldgen occurs. Use only for development as this will add more lag in game. [default: false]
    B:logCascadingWorldgenStacktrace=false

    # Show memory usage during game load. [default: true]
    B:showSplashMemoryBar=true

    # Optimize vanilla's ID-to-object map. [default: true]
    B:optimizeObjectIntIdentityMap=true

    # Fix MC-1406. [default: true]
    B:fixPlacementFlicker=true

    # Attempt to fix hanging in SP when logging in. [default: true]
    B:fixLoginRaceCondition=true

    # Reduce lag caused by item entities [default: true]
    B:itemLagReduction=true

    # EXPERIMENTAL: Replace the Thaumcraft hashing implementation. This really hasn't been tested and probably breaks everything. [default: false]
    B:betterThaumcraftHashing=false

    # Squared distance outside which most entities aren't ticked, default is 64 blocks. [range: -2147483648 ~ 2147483647, default: 4096]
    I:optimizeEntityTickingDistance=4096

    # Only show GT6 tooltip data when Shift is pressed. [default: true]
    B:hideGT6TooltipDataBehindKey=true

    # Log when cascading worldgen occurs. [default: true]
    B:logCascadingWorldgen=false

    # What the maximum render distance should be if raiseMaxRenderDistance is enabled. [range: 16 ~ 128, default: 32]
    I:newMaxRenderDistance=32

    # Increase the amount of armor mobs wear on average. From TMCW. [default: false]
    B:increaseMobArmor=false

    # EXPERIMENTAL: Cache matching crafting recipes to avoid needing to scan the whole list each time. [default: false]
    B:cacheRecipes=false

    # Increase the maximum render distance if OptiFine and FastCraft are not installed. [default: false]
    B:raiseMaxRenderDistance=false

    # Use a faster and asynchronous implementation of creative search. [default: true]
    B:asyncCreativeSearch=true

    # Prevents buttons from showing a yellow text color when hovered, as was done in 1.14+. [default: false]
    B:enableNewButtonAppearance=false

    # Replace tall grass texture with modern version. [default: false]
    B:modernizeTextures=false

    #  [default: true]
    B:hideDownloadingTerrainScreen=true

    # When true, dropped items will always render as though fancy graphics are enabled. [default: false]
    B:forceFancyItems=false

    # Disable OptiFine's version checker. [default: true]
    B:disableOFVersionCheck=true

    # Fix instances of cascading worldgen in vanilla Minecraft. Turn this option off if you require 100% seed parity. [default: true]
    B:fixVanillaCascadingWorldgen=true

    # List of entities to ignore for entity ticking optimization. [default: [Wither], [EnderDragon]]
    S:optimizeEntityTickingIgnoreList <
        Wither
        EnderDragon
     >

    # Cap the integrated server render distance at a minimum of 8 chunks, and adjust despawn ranges so mobs will always despawn properly on low render distances. [default: true]
    B:fixMobSpawnsAtLowRenderDist=true

    # Distance in chunks at which blocks are ticked, the default value of 0 means to use the render distance. [range: -2147483648 ~ 2147483647, default: 0]
    I:optimizeBlockTickingDistance=0

    # Fix instances of cascading worldgen in Mekanism. [default: true]
    B:fixMekanismCascadingWorldgen=true

    # Fix the 'TickNextTick list out of synch' error. [default: true]
    B:fixTickListSynchronization=true

    # Make sure entities don't spawn inside blocks that would make them suffocate. Off by default because it might reduce the number of passive entities that spawn during worldgen. [default: false]
    B:preventEntitySuffocationWorldgen=false

    # Clean up LaunchClassLoader cache. [default: true]
    B:clearLaunchLoaderCache=true

    # Add the Let's Encrypt root certificates to the default trust store. [default: false]
    B:enableLetsEncryptRoot=false

    # Allow 65000 block updates to be performed per tick, rather than 1000. [default: true]
    B:increaseBlockUpdateLimit=true

    # Fix TileEntity unloading being laggy. [default: true]
    B:fixTEUnloadLag=true
}


